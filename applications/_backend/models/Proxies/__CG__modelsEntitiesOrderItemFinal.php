<?php

namespace Proxies\__CG__\models\Entities\Order;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class ItemFinal extends \models\Entities\Order\ItemFinal implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setReview(\models\Entities\ReviewWeb $value)
    {
        $this->__load();
        return parent::setReview($value);
    }

    public function getReview()
    {
        $this->__load();
        return parent::getReview();
    }

    public function setOrder(\models\Entities\OrderFinal $value)
    {
        $this->__load();
        return parent::setOrder($value);
    }

    public function getOrder()
    {
        $this->__load();
        return parent::getOrder();
    }

    public function getID()
    {
        $this->__load();
        return parent::getID();
    }

    public function getProductID()
    {
        $this->__load();
        return parent::getProductID();
    }

    public function setPrice($value)
    {
        $this->__load();
        return parent::setPrice($value);
    }

    public function getPrice()
    {
        $this->__load();
        return parent::getPrice();
    }

    public function setQuantity($value)
    {
        $this->__load();
        return parent::setQuantity($value);
    }

    public function getQuantity()
    {
        $this->__load();
        return parent::getQuantity();
    }

    public function setBundle($value)
    {
        $this->__load();
        return parent::setBundle($value);
    }

    public function getBundle()
    {
        $this->__load();
        return parent::getBundle();
    }

    public function setProduct(\models\Entities\Product $value)
    {
        $this->__load();
        return parent::setProduct($value);
    }

    public function getProduct()
    {
        $this->__load();
        return parent::getProduct();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'price', 'quantity', 'bundle', 'product', 'review', 'order');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}