<?php

namespace Proxies\__CG__\models\Entities\Product;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Subcategory extends \models\Entities\Product\Subcategory implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getID()
    {
        $this->__load();
        return parent::getID();
    }

    public function setName($value)
    {
        $this->__load();
        return parent::setName($value);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function getURL()
    {
        $this->__load();
        return parent::getURL();
    }

    public function setPosition($value)
    {
        $this->__load();
        return parent::setPosition($value);
    }

    public function getPosition()
    {
        $this->__load();
        return parent::getPosition();
    }

    public function setDescription($value)
    {
        $this->__load();
        return parent::setDescription($value);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setStatus($value)
    {
        $this->__load();
        return parent::setStatus($value);
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function setCategory($value)
    {
        $this->__load();
        return parent::setCategory($value);
    }

    public function getCategory()
    {
        $this->__load();
        return parent::getCategory();
    }

    public function getSpecifications()
    {
        $this->__load();
        return parent::getSpecifications();
    }

    public function setParent($value)
    {
        $this->__load();
        return parent::setParent($value);
    }

    public function getParent()
    {
        $this->__load();
        return parent::getParent();
    }

    public function getChildren()
    {
        $this->__load();
        return parent::getChildren();
    }

    public function setImage($value)
    {
        $this->__load();
        return parent::setImage($value);
    }

    public function getImage()
    {
        $this->__load();
        return parent::getImage();
    }

    public function getImageURL()
    {
        $this->__load();
        return parent::getImageURL();
    }

    public function setHighlight($value)
    {
        $this->__load();
        return parent::setHighlight($value);
    }

    public function getHighlight()
    {
        $this->__load();
        return parent::getHighlight();
    }

    public function setVendorHighlight($value)
    {
        $this->__load();
        return parent::setVendorHighlight($value);
    }

    public function getVendorHighlights()
    {
        $this->__load();
        return parent::getVendorHighlights();
    }

    public function setBrand($value)
    {
        $this->__load();
        return parent::setBrand($value);
    }

    public function getBrands()
    {
        $this->__load();
        return parent::getBrands();
    }

    public function getReviewSpecifications()
    {
        $this->__load();
        return parent::getReviewSpecifications();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'position', 'description', 'status', 'icon', 'highlight', 'category', 'specifications', 'products', 'children', 'parent', 'highlights', 'ads', 'review_specifications', 'brands', 'sizes');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}