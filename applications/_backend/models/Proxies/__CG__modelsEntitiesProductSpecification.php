<?php

namespace Proxies\__CG__\models\Entities\Product;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Specification extends \models\Entities\Product\Specification implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getID()
    {
        $this->__load();
        return parent::getID();
    }

    public function setName($value)
    {
        $this->__load();
        return parent::setName($value);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setPosition($value)
    {
        $this->__load();
        return parent::setPosition($value);
    }

    public function getPosition()
    {
        $this->__load();
        return parent::getPosition();
    }

    public function setPositionInfo($value)
    {
        $this->__load();
        return parent::setPositionInfo($value);
    }

    public function getPositionInfo()
    {
        $this->__load();
        return parent::getPositionInfo();
    }

    public function setPositionKlirit($value)
    {
        $this->__load();
        return parent::setPositionKlirit($value);
    }

    public function getPositionKlirit()
    {
        $this->__load();
        return parent::getPositionKlirit();
    }

    public function setStatus($value)
    {
        $this->__load();
        return parent::setStatus($value);
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function setVisibility($value)
    {
        $this->__load();
        return parent::setVisibility($value);
    }

    public function getVisibility()
    {
        $this->__load();
        return parent::getVisibility();
    }

    public function setFilterVisibility($value)
    {
        $this->__load();
        return parent::setFilterVisibility($value);
    }

    public function getFilterVisibility()
    {
        $this->__load();
        return parent::getFilterVisibility();
    }

    public function setBundleVisibility($value)
    {
        $this->__load();
        return parent::setBundleVisibility($value);
    }

    public function getBundleVisibility()
    {
        $this->__load();
        return parent::getBundleVisibility();
    }

    public function setTechIconVisibility($value)
    {
        $this->__load();
        return parent::setTechIconVisibility($value);
    }

    public function getTechIconVisibility()
    {
        $this->__load();
        return parent::getTechIconVisibility();
    }

    public function getFilters()
    {
        $this->__load();
        return parent::getFilters();
    }

    public function setSubcategory($value)
    {
        $this->__load();
        return parent::setSubcategory($value);
    }

    public function getSubcategory()
    {
        $this->__load();
        return parent::getSubcategory();
    }

    public function setTypeID($value)
    {
        $this->__load();
        return parent::setTypeID($value);
    }

    public function getTypeID()
    {
        $this->__load();
        return parent::getTypeID();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'position', 'position_info', 'position_klirit', 'status', 'visibility', 'filter_visibility', 'bundle_visibility', 'techicon_visibility', 'type_id', 'filters', 'subcategory', 'products_text_filter');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}